{"componentChunkName":"component---src-pages-blog-mdx-slug-tsx","path":"/blog/ship-of-harkinian/","result":{"data":{"mdx":{"frontmatter":{"title":"Ship of Harkinian","date":"October 21, 2022"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Ship of Harkinian\",\n  \"date\": \"2022-10-21T22:09:00.000Z\",\n  \"description\": \"A PC Port of The Legend of Zelda: Ocarina of Time\",\n  \"portfolio_score\": 1000,\n  \"github\": \"https://github.com/HarbourMasters/Shipwright\",\n  \"featured\": true,\n  \"categories\": [\"Portfolio\"],\n  \"tags\": [\"pc port\", \"video games\", \"C\", \"C++\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Ship of Harkinian is the codename for a PC Port of the Nintendo 64 Classic, Ocarina of Time. It's run by a team of\\n25+ developers all collaborating on new features, bugfixes, and enhancements to the authentic experience.\\nThe main code for the game is the C code from the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://zelda64.dev/\"\n  }, \"Zelda Reverse Engineering Team\"), \"'s decompilation\\nof the original game, with various edits and C++ enhancements to make it run well on the PC. It also\\nspawned a separate project that is being split off from the main project called \\\"LibUltraShip\\\", a library to make\\ndevelopment of future ports of other decompiled N64 games easier. For more details check out the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://shipofharkinian.com\"\n  }, \"website\"), \".\"), mdx(\"p\", null, \"My contributions include, but are not limited to, various bugfixes all over the project, some new under the hood\\nfeatures intended to make various aspects of the game engine more flexible for a modding engine down the road, and\\nseveral new features for the built-in randomizer feature. I have collaborated remotely with various other team members\\nto make these features a reality, via Github (Code reviews and pull requests) and Discord (Text and Voice Chat). I\\nstarted contributing code to the project in May of 2022 and became an official member of the development team around July 2022.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Ship of Harkinian is the codename for a PC Port of the Nintendo 64 Classic, Ocarina of Time. It's run by a team of\n25+ developers allâ€¦"}},"pageContext":{"id":"904f7f0e-616d-5038-98aa-6774c0441285","slug":"ship-of-harkinian/","__params":{"slug":"ship-of-harkinian"}}},"staticQueryHashes":["26522286","3159585216"]}