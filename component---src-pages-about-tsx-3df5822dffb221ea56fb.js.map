{"version":3,"file":"component---src-pages-about-tsx-3df5822dffb221ea56fb.js","mappings":"+KAEO,MCWMA,EAAmCC,IAO1C,IAP2C,MAC7CC,EAAK,YACLC,EAAW,QACXC,EAAO,MACPC,EAAK,SACLC,EAAQ,SACRC,GACHN,EACG,MACIC,MAAOM,EACPL,YAAaM,EAAkB,IAC/BC,EACAL,MAAOM,EAAY,gBACnBC,IDvBSC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aCYXC,EAAM,CACRd,MAAOA,EAAWA,EAAK,MAAMM,EAAiBA,EAC9CL,YAAaA,GAAeM,EAC5BJ,MAAO,GAAGK,GAAML,GAASM,GACzBD,IAAK,GAAGA,EAAMJ,EAASW,UAK3B,OAFAC,QAAQC,IAAIb,EAASW,UAGjBG,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAAQ,gBACrCF,EAAAA,cAAA,aAAQJ,EAAId,OACZkB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASN,EAAIb,cACtCiB,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASN,EAAIX,QAC/BW,EAAIN,KAAOU,EAAAA,cAAA,QAAMG,SAAS,SAASD,QAASN,EAAIN,OAC/CN,EAAiB,KAASgB,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YAC5DN,EAAId,OAASkB,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASN,EAAId,QACpDc,EAAIb,aACDiB,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASN,EAAIb,cAEhDa,EAAIX,OAASe,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASN,EAAIX,QACrDe,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBACjCV,GACGQ,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASV,IAEzCI,EAAId,OAASkB,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASN,EAAId,QACrDc,EAAIb,aACDiB,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASN,EAAIb,cAEjDa,EAAIX,OAASe,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASN,EAAIX,QACrDE,EACF,C,wFCzDX,MAuBaiB,EAAOvB,IAA6B,IAA5B,SAAEK,GAAqBL,EACxC,OAAOmB,EAAAA,cAACpB,EAAAA,EAAG,CAACE,MAAM,WAAWI,SAAUA,GAAY,EAGvD,UA3BkBmB,IAEVL,EAAAA,cAAA,OAAKM,UAAU,uBACXN,EAAAA,cAAA,OAAKM,UAAU,iIACXN,EAAAA,cAAA,MAAIM,UAAU,gBAAe,YAC7BN,EAAAA,cAAA,OAAKM,UAAU,QACXN,EAAAA,cAAA,SAAG,4OAMHA,EAAAA,cAAA,SAAG,4K","sources":["webpack://portfolio-gatsby/./src/hooks/useSiteMetadata.ts","webpack://portfolio-gatsby/./src/components/seo.tsx","webpack://portfolio-gatsby/./src/pages/about.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    twitterUsername\n                    image\n                    url\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata;\n}\n","import { PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport { FunctionComponent } from \"react\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\n\ntype SEOProps = {\n    title?: string;\n    description?: string;\n    article?: boolean;\n    image?: string;\n    location: PageProps[\"location\"];\n};\n\nexport const SEO: FunctionComponent<SEOProps> = ({\n    title,\n    description,\n    article,\n    image,\n    location,\n    children,\n}) => {\n    const {\n        title: defaultTitle,\n        description: defaultDescription,\n        url,\n        image: defaultImage,\n        twitterUsername,\n    } = useSiteMetadata();\n\n    const seo = {\n        title: title ? `${title} | ${defaultTitle}` : defaultTitle,\n        description: description || defaultDescription,\n        image: `${url}${image || defaultImage}`,\n        url: `${url}${location.pathname}`,\n    };\n\n    console.log(location.pathname);\n\n    return (\n        <>\n            <meta name=\"view-transition\" content=\"same-origin\" />\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n                <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n                <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n                <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n            {children}\n        </>\n    );\n};\n","import { PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport { SEO } from \"../components/seo\";\n\nconst AboutPage = () => {\n    return (\n        <div className=\"flex justify-center\">\n            <div className=\"prose lg:prose-xl prose-zinc dark:prose-invert md:max-w-[65ch] lg:max-w-[75ch] xl:max-w-[90ch] prose-h2:mt-2 lg:prose-h2:mt-2\">\n                <h1 className=\"px-9 md:px-4\">About Me</h1>\n                <div className=\"px-8\">\n                    <p>\n                        My name is Christopher Leggett, Iâ€™m an East Carolina University\n                        Graduate with a Bachelor of Science Degree in Computer Science. I am\n                        currently an MSP IT Technician by trade but my end goal is to be a\n                        Full Stack or Backend Developer.\n                    </p>\n                    <p>\n                        This Portfolio/Blog is written in Gatsby. It leverages Tailwind CSS\n                        for styling, dark-mode, and more, and PrismJS for Code Highlighting\n                        with the Tomorrow Night theme.\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const Head = ({ location }: PageProps) => {\n    return <SEO title=\"About Me\" location={location} />;\n};\n\nexport default AboutPage;\n"],"names":["SEO","_ref","title","description","article","image","location","children","defaultTitle","defaultDescription","url","defaultImage","twitterUsername","useStaticQuery","site","siteMetadata","seo","pathname","console","log","React","name","content","property","Head","AboutPage","className"],"sourceRoot":""}