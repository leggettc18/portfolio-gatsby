{"version":3,"file":"component---src-pages-blog-mdx-fields-slug-tsx-content-file-path-content-portfolio-space-game-index-mdx-4189de746f9b730cc355.js","mappings":"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","sources":["webpack://portfolio-gatsby/./content/portfolio/space-game/index.mdx","webpack://portfolio-gatsby/./src/pages/blog/{mdx.fields__slug}.tsx","webpack://portfolio-gatsby/./src/hooks/useSiteMetadata.ts","webpack://portfolio-gatsby/./src/components/seo.tsx","webpack://portfolio-gatsby/./node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    span: \"span\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is a very simple space shooter game written entirely in JavaScript. The goal of this\\nwas not to make a very compelling or ground-breaking game, but to demonstrate what I believe\\nare best practices, based on what I was able to find online.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/f8900457667118e7ef7f2d7b6a2eadf7/space-game.gif\",\n    alt: \"Animation of playing the Space Game\"\n  }), \"\\n\", React.createElement(_components.p, null, \"It was originally built from Microsoft's Web Dev for Beginners repo's javascript game tutorial\\nas a base, but I have expanded on it to the point that not much of the original code is left.\\nIt utilizes a spritesheet from Kenney's website, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">window.requestAnimationFrame()</code>\"\n    }\n  }), \" for\\nupdating the frame, and some physics calculations to move the objects around at set speed.\\nIt uses a Pub/Sub architecture for sending keyboard input as well. You can check out the source\\ncode \", React.createElement(_components.a, {\n    href: \"https://github.com/leggettc18/space-game\"\n  }, \"here\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/chris/source/repos/portfolio-gatsby/content/portfolio/space-game/index.mdx\";\nimport * as React from 'react';\nimport {SEO} from '../../components/seo';\nconst Post = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(\"div\", {\n    className: \"flex justify-center\"\n  }, React.createElement(\"div\", {\n    className: \"prose lg:prose-xl prose-zinc dark:prose-invert md:max-w-[65ch] lg:max-w-[75ch] xl:max-w-[90ch] prose-h2:mt-2 lg:prose-h2:mt-2\"\n  }, React.createElement(\"h1\", {\n    className: \"px-9 pt-9 md:px-4\"\n  }, data.mdx.frontmatter.title), React.createElement(\"div\", {\n    className: \"px-9\"\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children)));\n};\nconst query = \"789134884\";\nexport const Head = _ref2 => {\n  var _data$mdx$frontmatter;\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    description: data.mdx.excerpt || 'nothin’',\n    image: (_data$mdx$frontmatter = data.mdx.frontmatter.image) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.childImageSharp.sizes.src,\n    article: true\n  });\n};\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    twitterUsername\n                    image\n                    url\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata;\n}\n","import * as React from 'react';\nimport { FunctionComponent } from 'react';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\n\ntype SEOProps = {\n    title?: string,\n    description?: string,\n    pathname?: string,\n    article?: boolean,\n    image?: string,\n}\n\nexport const SEO: FunctionComponent<SEOProps> = ({ title, description, pathname, article, image, children }) => {\n\n    const {\n        title: defaultTitle,\n        description: defaultDescription,\n        url,\n        image: defaultImage,\n        twitterUsername,\n    } = useSiteMetadata();\n\n    const seo = {\n        title: title ? `${title} | ${defaultTitle}` : defaultTitle,\n        description: description || defaultDescription,\n        image: `${url}${image || defaultImage}`,\n        url: `${url}${pathname}`\n    };\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n                <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n                <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n                <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n            {children}\n        </>\n    );\n};\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","img","span","a","_provideComponents","components","React","src","alt","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","Post","_ref","data","children","className","mdx","frontmatter","title","date","Head","_ref2","_data$mdx$frontmatter","SEO","description","excerpt","image","childImageSharp","sizes","article","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","pathname","defaultTitle","defaultDescription","url","defaultImage","twitterUsername","useStaticQuery","site","siteMetadata","seo","name","content","property","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}