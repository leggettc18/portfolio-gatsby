{"version":3,"file":"component---src-pages-portfolio-mdx-fields-slug-tsx-content-file-path-content-portfolio-ship-of-harkinian-index-mdx-9a9b5837ee04008efebe.js","mappings":"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","sources":["webpack://portfolio-gatsby/./content/portfolio/ship-of-harkinian/index.mdx","webpack://portfolio-gatsby/./src/pages/portfolio/{mdx.fields__slug}.tsx","webpack://portfolio-gatsby/./src/hooks/useSiteMetadata.ts","webpack://portfolio-gatsby/./src/components/seo.tsx","webpack://portfolio-gatsby/./node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Ship of Harkinian is the codename for a PC Port of the Nintendo 64 Classic, Ocarina of Time. It's run by a team of\\n25+ developers all collaborating on new features, bugfixes, and enhancements to the authentic experience.\\nThe main code for the game is the C code from the \", React.createElement(_components.a, {\n    href: \"https://zelda64.dev/\"\n  }, \"Zelda Reverse Engineering Team\"), \"'s decompilation\\nof the original game, with various edits and C++ enhancements to make it run well on the PC. It also\\nspawned a separate project that is being split off from the main project called \\\"LibUltraShip\\\", a library to make\\ndevelopment of future ports of other decompiled N64 games easier. For more details check out the\\n\", React.createElement(_components.a, {\n    href: \"https://shipofharkinian.com\"\n  }, \"website\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"My contributions include, but are not limited to, various bugfixes all over the project, some new under the hood\\nfeatures intended to make various aspects of the game engine more flexible for a modding engine down the road, and\\nseveral new features for the built-in randomizer feature. I have collaborated remotely with various other team members\\nto make these features a reality, via Github (Code reviews and pull requests) and Discord (Text and Voice Chat). I\\nstarted contributing code to the project in May of 2022 and became an official member of the development team around July 2022.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/chris/source/repos/portfolio-gatsby/content/portfolio/ship-of-harkinian/index.mdx\";\nimport * as React from \"react\";\nimport {SEO} from \"../../components/seo\";\nconst Project = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(\"div\", {\n    className: \"flex justify-center\"\n  }, React.createElement(\"div\", {\n    className: \"prose lg:prose-xl prose-zinc dark:prose-invert md:max-w-[65ch] lg:max-w-[75ch] xl:max-w-[90ch] prose-h2:mt-2 lg:prose-h2:mt-2\"\n  }, React.createElement(\"h1\", {\n    className: \"px-9 pt-9 md:px-4\"\n  }, data.mdx.frontmatter.title), React.createElement(\"div\", {\n    className: \"px-9\"\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), React.createElement(\"a\", {\n    href: data.mdx.frontmatter.github,\n    className: \"dark:text-zinc-100 bg-purple-300 dark:bg-purple-600 hover:bg-purple-400 dark:hover:bg-purple-800 p-4 rounded no-underline flex max-w-fit items-center space-x-2\"\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    fill: \"currentColor\",\n    className: \"bi bi-github\",\n    viewBox: \"0 0 16 16\"\n  }, React.createElement(\"path\", {\n    d: \"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n  })), \" \", React.createElement(\"p\", {\n    className: \"p-0 m-0\"\n  }, \"Check it out on Github!\")), children)));\n};\nexport const Head = _ref2 => {\n  var _data$mdx$frontmatter;\n  let {location, data} = _ref2;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    description: data.mdx.frontmatter.description || data.mdx.excerpt || \"nothinâ€™\",\n    image: (_data$mdx$frontmatter = data.mdx.frontmatter.image) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.childImageSharp.sizes.src,\n    location: location,\n    article: true\n  });\n};\nconst query = \"1488691692\";\nProject\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Project, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    twitterUsername\n                    image\n                    url\n                }\n            }\n        }\n    `)\n\n    return data.site.siteMetadata;\n}\n","import { PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport { FunctionComponent } from \"react\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\n\ntype SEOProps = {\n    title?: string;\n    description?: string;\n    article?: boolean;\n    image?: string;\n    location: PageProps[\"location\"];\n};\n\nexport const SEO: FunctionComponent<SEOProps> = ({\n    title,\n    description,\n    article,\n    image,\n    location,\n    children,\n}) => {\n    const {\n        title: defaultTitle,\n        description: defaultDescription,\n        url,\n        image: defaultImage,\n        twitterUsername,\n    } = useSiteMetadata();\n\n    const seo = {\n        title: title ? `${title} | ${defaultTitle}` : defaultTitle,\n        description: description || defaultDescription,\n        image: `${url}${image || defaultImage}`,\n        url: `${url}${location.pathname}`,\n    };\n\n    console.log(location.pathname);\n\n    return (\n        <>\n            <meta name=\"view-transition\" content=\"same-origin\" />\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n                <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n                <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n                <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n            {children}\n        </>\n    );\n};\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","Project","_ref","data","children","className","mdx","frontmatter","title","date","github","xmlns","width","height","fill","viewBox","d","Head","_ref2","_data$mdx$frontmatter","location","SEO","description","excerpt","image","childImageSharp","sizes","src","article","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","defaultTitle","defaultDescription","url","defaultImage","twitterUsername","useStaticQuery","site","siteMetadata","seo","pathname","console","log","name","content","property","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}